{"version":3,"sources":["routes/surveys.ts"],"names":[],"mappings":"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","file":"routes/surveys.js","sourcesContent":["import express = require('express');\nvar router = express.Router();\n\n// db references\nimport mongoose = require('mongoose');\nimport surveyModel = require('../models/survey');\n\nimport Survey = surveyModel.Survey;\n\n// GET - show main aritcles page\nrouter.get('/', (req: express.Request, res: express.Response, next: any) => {\n\n    // use the Survey model to query the Surveys collection\n    Survey.find(function(error, surveys) {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // no error, we found a list of surveys\n            res.render('surveys/index', {\n                title: 'Surveys',\n                surveys: surveys\n            });\n        }\n    });\n});\n\n// GET add page - show the blank form\nrouter.get('/add', function(req: express.Request, res: express.Response, next: any) {\n    res.render('surveys/add', {\n        title: 'Add a New Survey'\n    });\n});\n\n// POST add page - save the new survey\nrouter.post('/add', function(req: express.Request, res: express.Response, next: any) {\n    Survey.create({\n        title: req.body.title,\n        content: req.body.content\n    }, function(error, Survey) {\n        // did we get back an error or valid Survey object?\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            res.redirect('/surveys');\n        }\n    })\n});\n\n// GET edit page - show the current survey in the form\nrouter.get('/:id', (req: express.Request, res: express.Response, next: any) => {\n\n    var id = req.params.id;\n\n    Survey.findById(id, (error, Survey) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            //show the edit view\n            res.render('surveys/edit', {\n                title: 'Survey Details',\n                survey: Survey\n            });\n        }\n    });\n});\n\n// POST edit page - update the selected survey\nrouter.post('/:id', (req: express.Request, res: express.Response, next: any) => {\n\n    // grab the id from the url parameter\n    var id = req.params.id;\n\n    // create and populate an survey object\n    var survey = new Survey({\n        _id: id,\n        title: req.body.title,\n        content: req.body.content\n    });\n\n    // run the update using mongoose and our model\n    Survey.update({ _id: id }, survey, (error) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            res.redirect('/surveys');\n        }\n    });\n});\n\n// GET delete survey\nrouter.get('/delete/:id', (req: express.Request, res: express.Response, next: any) => {\n\n    // get the id from the url\n    var id = req.params.id;\n\n    // use the model and delete this record\n    Survey.remove({ _id: id }, (error) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            res.redirect('/surveys');\n        }\n    });\n});\n\n// make this public\nmodule.exports = router;"],"sourceRoot":"/source/"}