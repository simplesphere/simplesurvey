{"version":3,"sources":["routes/articles.ts"],"names":[],"mappings":"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","file":"routes/articles.js","sourcesContent":["import express = require('express');\nimport passport = require('passport');\nvar router = express.Router();\n\n// db references\nimport mongoose = require('mongoose');\nimport articleModel = require('../models/article');\n\nimport Article = articleModel.Article;\n\n/* Utility Function to check if user is authenticated */\nfunction requireAuth(req: express.Request, res: express.Response, next: any) {\n    // check if the user is logged in\n    if (!req.isAuthenticated()) {\n        return res.redirect('/login');\n    }\n    next();\n}\n\n// GET - show main aritcles page\nrouter.get('/', (req: express.Request, res: express.Response, next: any) => {\n   \n    // use the Article model to query the Articles collection\n    Article.find(function(error, articles) {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // no error, we found a list of articles\n            res.render('articles/index', {\n                title: 'Articles',\n                articles: articles\n            });\n        }\n    });\n});\n\n// GET add page - show the blank form\nrouter.get('/add', function(req: express.Request, res: express.Response, next: any) {\n    res.render('articles/add', {\n        title: 'Add a New Article'\n    });\n});\n\n// POST add page - save the new article\nrouter.post('/add', function(req: express.Request, res: express.Response, next: any) {\n    Article.create({\n        title: req.body.title,\n        content: req.body.content\n    }, function(error, Article) {\n        // did we get back an error or valid Article object?\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            res.redirect('/articles');\n        }\n    })\n});\n\n// GET edit page - show the current article in the form\nrouter.get('/:id', (req: express.Request, res: express.Response, next: any) => {\n\n    var id = req.params.id;\n\n    Article.findById(id, (error, Article) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            //show the edit view\n            res.render('articles/edit', {\n                title: 'Article Details',\n                article: Article\n            });\n        }\n    });\n});\n\n// POST edit page - update the selected article\nrouter.post('/:id', (req: express.Request, res: express.Response, next: any) => {\n\n    // grab the id from the url parameter\n    var id = req.params.id;\n\n    // create and populate an article object\n    var article = new Article({\n        _id: id,\n        title: req.body.title,\n        content: req.body.content\n    });\n\n    // run the update using mongoose and our model\n    Article.update({ _id: id }, article, (error) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            res.redirect('/articles');\n        }\n    });\n});\n\n// GET delete article\nrouter.get('/delete/:id', (req: express.Request, res: express.Response, next: any) => {\n\n    // get the id from the url\n    var id = req.params.id;\n\n    // use the model and delete this record\n    Article.remove({ _id: id }, (error) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            res.redirect('/articles');\n        }\n    });\n});\n\n// make this public\nmodule.exports = router;"],"sourceRoot":"/source/"}