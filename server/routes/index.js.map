{"version":3,"sources":["routes/index.ts"],"names":[],"mappings":"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","file":"routes/index.js","sourcesContent":["import express = require('express');\nvar sendgrid = require('sendgrid')('ACCOUNT_NAME', 'PASSWORD');\nimport passport = require('passport');\nvar router = express.Router();\n\n// db references\nimport userModel = require('../models/user');\nimport User = userModel.User;\n\n/* GET home page. */\nrouter.get('/', (req: express.Request, res: express.Response, next: any) => {\n    res.render('index', { \n        title: 'Home', \n        displayName: req.user ? req.user.displayName : '' });\n});\n\n/* GET about page. */\nrouter.get('/about-us', (req: express.Request, res: express.Response, next: any) => {\n    res.render('about-us', { \n        title: 'About Us',\n        displayName: req.user ? req.user.displayName : '' });\n});\n\n/* GET contact page. */\nrouter.get('/contact-us', (req: express.Request, res: express.Response, next: any) => {\n    req.flash('successmessage', 'Your message has been submitted. We will get back to you shortly!');\n    req.flash('errormessage','Oops, something went wrong!');\n    res.render('contact-us', { \n        title: 'Contact', \n        messages: null,\n        displayName: req.user ? req.user.displayName : '' });\n});\n\n/* Email processing */\nrouter.post('/contact', (req: express.Request, res: express.Response, next: any) => {\n    sendgrid.send({\n        to: 'anoop.jeewoolall@gmail.com',\n        from: req.body.email,\n        subject: 'Simple Survey Contact Form',\n        text: \"This message has been sent from the contact form at [Simple Survey]\\r\\n\\r\\n\" +\n        \"Name: \" + req.body.name + \"\\r\\n\\r\\n\" +\n        \"Phone: \" + req.body.phone + \"\\r\\n\\r\\n\" +\n        req.body.message,\n        html: \"This message has been sent from the contact form at [Simple Survey]<br><br>\" +\n        \"<strong>Name:</strong> \" + req.body.name + \"<br><br>\" +\n        \"<strong>Phone:</strong> \" + req.body.phone + \"<br><br>\" +\n        req.body.message\n    },\n    (err, json) => {\n        if (err) { res.status(500).json('error'); \n        }\n        res.render('contact', { \n            title: 'Contact',\n            messages: req.flash('successmessage')\n     });\n\n    });\n});\n\n/* Render Login Page */\nrouter.get('/login', (req:express.Request, res: express.Response, next:any) => {\n    if(!req.user) {\n        res.render('login', {\n            title: 'Login',\n            messages: req.flash('loginMessage'),\n            displayName: req.user ? req.user.displayName : ''\n        });\n        return;\n    } else {\n        return res.redirect('/users');\n    }\n});\n\n/* Process Login Request */\nrouter.post('/login', passport.authenticate('local', {\n    successRedirect: '/users',\n    failureRedirect: '/login',\n    failureFlash: true\n}));\n\n/* Render Password Reset page */\nrouter.get('/reset', (req:express.Request, res: express.Response, next:any) => {\n    if(req.user) {\n        res.render('reset', {\n            title: 'Reset',\n            displayName: req.user ? req.user.displayName : '' \n        });  \n    }\n    else {\n        return res.redirect('/login');\n    }\n});\n\n/* Process Password Reset Request */\nrouter.post('/reset',(req:express.Request, res: express.Response, next:any) => {\n    console.log(req.user.username);\n    User.findOne({'username':req.user.username}, (err, user) => {\n       user.setPassword(req.body.password, (err) =>{\n          if(err) {\n              console.log(err);\n              next(err);\n          } else {\n              user.save((err) =>{\n                  if(err) {\n                      console.log(err);\n                  }\n                  \n                  console.log('Password Changed');\n                  res.redirect('/users');\n              });\n          }\n       }); \n    });\n});\n\n/* Render Registration page */\nrouter.get('/register', (req:express.Request, res: express.Response, next:any) => {\n    if(!req.user) {\n        res.render('register', {\n            title: 'Register',\n            messages: req.flash('registerMessage'),\n            displayName: req.user ? req.user.displayName : ''\n        });\n        return;\n    } else {\n        return res.redirect('/');\n    }\n});\n\n/* Process Registration Request */\nrouter.post('/register', (req:express.Request, res: express.Response, next:any) => {\n    // attempt to register user\n    User.register(new User(\n       { username: req.body.username,\n         password: req.body.password,\n         email: req.body.email,\n         displayName: req.body.displayName\n       }), req.body.password, (err) => {\n           if(err) {\n               console.log('Error Inserting New Data');\n               if(err.name == 'UserExistsError') {\n               req.flash('registerMessage', 'Registration Error: User Already Exists!');\n               }\n               return res.render('register', {\n                    title: 'Register',\n                    messages: req.flash('registerMessage'),\n                    displayName: req.user ? req.user.displayName : ''\n                });\n           }\n           // if registration is successful\n           return passport.authenticate('local')(req, res, ()=>{\n              res.redirect('/users'); \n           });\n       });\n});\n\n/* Process Logout Request */\nrouter.get('/logout', (req:express.Request, res: express.Response) => {\n    req.logOut();\n    res.redirect('/login');\n});\n\nmodule.exports = router;"],"sourceRoot":"/source/"}